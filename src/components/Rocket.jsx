/* eslint-disable react/no-unknown-property */
/*
  Auto-generated by Spline
*/

import useSpline from "@splinetool/r3f-spline";
import { OrbitControls, OrthographicCamera } from "@react-three/drei";
import { useRef } from "react";
import { useFrame } from "@react-three/fiber";

export default function Rocket({ launch, ...rocketProps }) {
  const { nodes, materials } = useSpline(
    "https://prod.spline.design/YMa5GPFfOXShjYSG/scene.splinecode"
  );

  const rocketRef = useRef();
  const rocketSmokeRef = useRef();

  useFrame((state, delta) => {
    // note: look here when rocket position y reach 500 then the rocket is outside the page so make an animation when you click on the button take a journey then the rocket will luanch then after we reach position 500 we will go to another page

    // rocketRef.current.rotation.y += delta;

    // rocketRef.current.position.y = Math.sin(state.clock.elapsedTime) * 0.5;
    if (launch) {
      if (rocketRef.current.position.y === 500) {
        rocketRef.current.position.y === 500;
      } else {
        rocketRef.current.position.y += delta * 150;
        rocketSmokeRef.current.position.y = 0;
        rocketSmokeRef.current.rotation.y =
          Math.sin(state.clock.elapsedTime) * 5;

        rocketRef.current.rotation.y += delta;
        rocketRef.current.rotation.z = Math.sin(state.clock.elapsedTime) * 0.25;
      }
    } else {
      rocketRef.current.rotation.y = Math.sin(state.clock.elapsedTime);

      rocketRef.current.rotation.z = Math.sin(state.clock.elapsedTime) * 0.25;
      rocketRef.current.position.x = Math.sin(state.clock.elapsedTime) * 50;
      rocketRef.current.position.z = Math.sin(state.clock.elapsedTime);

      rocketSmokeRef.current.position.y =
        Math.sin(state.clock.elapsedTime) * 50;
    }

    // console.log("this is rocket postiton y :  ", rocketRef.current.position.y);
  });

  return (
    <>
      {/* <color attach="background" args={["#4a2e6c"]} /> */}
      <group {...rocketProps} dispose={null}>
        <scene name="Scene">
          <group position={[0, 0, 5]}>
            <mesh
              name="Rectangle"
              geometry={nodes.Rectangle.geometry}
              material={materials["Rectangle Material"]}
              visible={false}
              castShadow
              receiveShadow
              position={[-5.34, 129.7, -9.04]}
              rotation={[0, 0, -Math.PI]}
              scale={[0.57, 1, 1]}
            />
            <directionalLight
              name="Directional Light 2"
              castShadow
              intensity={1.06}
              shadow-mapSize-width={1024}
              shadow-mapSize-height={1024}
              shadow-camera-near={-10000}
              shadow-camera-far={100000}
              shadow-camera-left={-373.854}
              shadow-camera-right={373.854}
              shadow-camera-top={373.854}
              shadow-camera-bottom={-373.854}
              position={[-99, 167.09, -240.59]}
            />
            <directionalLight
              name="Directional Light"
              castShadow
              intensity={2.6}
              shadow-mapSize-width={1024}
              shadow-mapSize-height={1024}
              shadow-camera-near={-10000}
              shadow-camera-far={100000}
              shadow-camera-left={-112.935}
              shadow-camera-right={112.935}
              shadow-camera-top={112.935}
              shadow-camera-bottom={-112.935}
              position={[220.17, 167.09, 327.82]}
            />
            <group name="Group 3" position={[0, 6.55, 0]}>
              <group
                name="Group 2"
                position={[0, -100, 0]}
                ref={rocketRef}
                scale={2.1}
              >
                <group
                  name="Group"
                  position={[0.46, 99.11, 29.9]}
                  rotation={[-0.26, 0, 0]}
                  scale={1.45}
                >
                  <mesh
                    name="Sphere 2"
                    geometry={nodes["Sphere 2"].geometry}
                    material={materials["Sphere 2 Material"]}
                    castShadow
                    receiveShadow
                    position={[-0.12, 0, 1.82]}
                  />
                  <mesh
                    name="Cylinder"
                    geometry={nodes.Cylinder.geometry}
                    material={materials["Cylinder Material"]}
                    castShadow
                    receiveShadow
                    position={[0, 0, 0.75]}
                    rotation={[Math.PI / 2, 0, 0]}
                  />
                </group>
                <mesh
                  name="翼"
                  geometry={nodes.翼.geometry}
                  material={materials["翼 Material"]}
                  visible={false}
                  castShadow
                  receiveShadow
                  position={[0.01, 6.72, 0]}
                />
                <mesh
                  name="身 2"
                  geometry={nodes["身 2"].geometry}
                  material={nodes["身 2"].material}
                  castShadow
                  receiveShadow
                  position={[0.16, -14.37, 0.68]}
                />
                <group
                  name="Group 21"
                  position={[0, -70.48, 0]}
                  ref={rocketSmokeRef}
                >
                  {/* <mesh
                    name="Lathe 3"
                    geometry={nodes["Lathe 3"].geometry}
                    material={materials["Lathe 3 Material"]}
                    castShadow
                    receiveShadow
                    position={[0, 0, 0]}
                    scale={[1, 1.9, 1]}
                  /> */}
                  <mesh
                    name="Lathe 4"
                    geometry={nodes["Lathe 4"].geometry}
                    material={materials["Lathe 4 Material"]}
                    castShadow
                    receiveShadow
                    position={[0, 21.05, 0]}
                    scale={[1, 1.9, 1]}
                  />
                </group>
                <pointLight
                  name="Point Light"
                  castShadow
                  intensity={2.32}
                  decay={3}
                  distance={1421}
                  shadow-mapSize-width={1024}
                  shadow-mapSize-height={1024}
                  shadow-camera-near={100}
                  shadow-camera-far={100000}
                  color="#f3e2d6"
                  position={[0, -51.62, 0]}
                />
                <mesh
                  name="身"
                  geometry={nodes.身.geometry}
                  material={nodes.身.material}
                  castShadow
                  receiveShadow
                  position={[0.16, -14.37, 0.68]}
                />
                <mesh
                  name="底"
                  geometry={nodes.底.geometry}
                  material={materials["底 Material"]}
                  castShadow
                  receiveShadow
                  position={[0, -11.51, 0]}
                />
              </group>
            </group>
            <OrthographicCamera
              name="1"
              makeDefault={true}
              far={10000}
              near={-50000}
            />
            <hemisphereLight
              name="Default Ambient Light"
              intensity={0.75}
              color="#eaeaea"
            />
          </group>
          <OrbitControls autoRotate enableZoom={false} />
        </scene>
      </group>
    </>
  );
}
